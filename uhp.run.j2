#!/bin/bash

trap "exit 130" SIGINT
trap "exit 137" SIGKILL
trap "exit 143" SIGTERM

set -o errexit
set -o nounset
set -o pipefail

UHP_JSON='/etc/uhp/uhp.json'

register () {
  local deploy_key="${1:-}"
  local chnserver="${2:-localhost}"
  local json="${3:-uhp}"
  local hostname="$(hostname -f)"
  local ip="${4:-}"
  local honeypot="uhp"

  if [[ -z ${deploy_key} ]]
  then
    return 1
  fi

  curl --verbose \
       --silent \
       --request POST \
       --header "Content-Type: application/json" \
       --output ${json} \
       --data "{
    \"name\": \"${hostname}-${honeypot}\",
    \"hostname\": \"$hostname\",
    \"ip\": \"${ip}\",
    \"deploy_key\": \"$deploy_key\",
    \"honeypot\": \"$honeypot\"
  }" ${chnserver}/api/sensor/
}


setup_uhp_conf () {
  local server=${1:-}
  local server_port=${2:-}
  local uid=${3:-}
  local secret=${4:-}
  local debug=${5:-false}

  pushd /opt/uhp
  sed -i "s/host *= *broker/host = ${server}/g" logging.cfg
  sed -i "s/port *= *10000/port = ${server_port}/g" logging.cfg
  sed -i "s/ident *= *uhp/ident = ${uid}/g" logging.cfg
  sed -i "s/secret *= *your_secret_here/secret = ${secret}/g" logging.cfg

  popd
}


main () {
  source {{ sysconfig_dir }}/uhp

  if [[ ${DEBUG} == "true" ]]
  then
    set -o xtrace
  fi

  local deploy_key=${DEPLOY_KEY:-}
  local chn_server=${CHN_SERVER}
  local feeds_server=${FEEDS_SERVER:-localhost}
  local feeds_server_port=${FEEDS_SERVER_PORT:-10000}
  local json=${UHP_JSON:-uhp.json}
  local ip=${IP_ADDRESS:-}

  local debug=${DEBUG:-false}

  if [[ -z ${deploy_key} ]]
  then
    echo "[CRIT] - No deploy key found"
    exit 1
  fi

  # If it doesn't exist or is empty
  if [[ ! -f ${json} ]] || [[ ! -s ${json} ]]
  then
    register ${deploy_key} ${chn_server} ${json} ${ip}

    return=$?

    if [[ $return -ne 0 ]]
    then
      echo "Failed to register with ${chn_server} using key: ${deploy_key}"
      exit 1
    fi
  fi

  local uuid=$(python -c "import json;obj=json.load(file('${json}'));print obj['uuid']")

  if [ -z "$uuid" ]
  then
    echo "Could not create sensor using name \"$(hostname -f)\"."
    exit 1
  else
    echo "Created sensor: " $uuid
  fi

  local feeds_server=$(echo $feeds_server | sed 's#^http://##; s#^https://##; s#/.*$##; s/:.*$//')
  local uid=$(python -c "import json;obj=json.load(file('${json}'));print obj['identifier']")
  local secret=$(python -c "import json;obj=json.load(file('${json}'));print obj['secret']")

  setup_uhp_conf ${feeds_server} \
                 ${feeds_server_port} \
                 ${uid} ${secret} \
                 ${debug}

  exec su - uhp -c "/opt/uhp/uhp.py -H /opt/uhp/logging.cfg /opt/uhp/configs/pop3.json 1110"
}

main "$@"
